// source: notePurchaseAgreement.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var google_api_annotations_pb = require('./google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var protoc$gen$openapiv2_options_annotations_pb = require('./protoc-gen-openapiv2/options/annotations_pb.js');
goog.object.extend(proto, protoc$gen$openapiv2_options_annotations_pb);
goog.exportSymbol('proto.notepurchaseagreement.GetNotePurchaseAgreementDocRequest', null, global);
goog.exportSymbol('proto.notepurchaseagreement.GetNotePurchaseAgreementDocResponse', null, global);
goog.exportSymbol('proto.notepurchaseagreement.NotePuchaseAgreement', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.notepurchaseagreement.NotePuchaseAgreement = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.notepurchaseagreement.NotePuchaseAgreement, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.notepurchaseagreement.NotePuchaseAgreement.displayName = 'proto.notepurchaseagreement.NotePuchaseAgreement';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.notepurchaseagreement.GetNotePurchaseAgreementDocRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.notepurchaseagreement.GetNotePurchaseAgreementDocRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.notepurchaseagreement.GetNotePurchaseAgreementDocRequest.displayName = 'proto.notepurchaseagreement.GetNotePurchaseAgreementDocRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.notepurchaseagreement.GetNotePurchaseAgreementDocResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.notepurchaseagreement.GetNotePurchaseAgreementDocResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.notepurchaseagreement.GetNotePurchaseAgreementDocResponse.displayName = 'proto.notepurchaseagreement.GetNotePurchaseAgreementDocResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.notepurchaseagreement.NotePuchaseAgreement.prototype.toObject = function(opt_includeInstance) {
  return proto.notepurchaseagreement.NotePuchaseAgreement.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.notepurchaseagreement.NotePuchaseAgreement} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.notepurchaseagreement.NotePuchaseAgreement.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    firstname: jspb.Message.getFieldWithDefault(msg, 2, ""),
    lastname: jspb.Message.getFieldWithDefault(msg, 3, ""),
    dateofbirth: jspb.Message.getFieldWithDefault(msg, 4, ""),
    homeaddress: jspb.Message.getFieldWithDefault(msg, 5, ""),
    emailaddress: jspb.Message.getFieldWithDefault(msg, 6, ""),
    phonenumber: jspb.Message.getFieldWithDefault(msg, 7, ""),
    socialsecurity: jspb.Message.getFieldWithDefault(msg, 8, ""),
    fundscommitted: jspb.Message.getFieldWithDefault(msg, 9, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.notepurchaseagreement.NotePuchaseAgreement}
 */
proto.notepurchaseagreement.NotePuchaseAgreement.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.notepurchaseagreement.NotePuchaseAgreement;
  return proto.notepurchaseagreement.NotePuchaseAgreement.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.notepurchaseagreement.NotePuchaseAgreement} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.notepurchaseagreement.NotePuchaseAgreement}
 */
proto.notepurchaseagreement.NotePuchaseAgreement.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFirstname(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastname(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDateofbirth(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setHomeaddress(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmailaddress(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhonenumber(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setSocialsecurity(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setFundscommitted(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.notepurchaseagreement.NotePuchaseAgreement.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.notepurchaseagreement.NotePuchaseAgreement.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.notepurchaseagreement.NotePuchaseAgreement} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.notepurchaseagreement.NotePuchaseAgreement.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getFirstname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLastname();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDateofbirth();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getHomeaddress();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getEmailaddress();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getPhonenumber();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getSocialsecurity();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getFundscommitted();
  if (f !== 0) {
    writer.writeUint64(
      9,
      f
    );
  }
};


/**
 * optional uint32 Id = 1;
 * @return {number}
 */
proto.notepurchaseagreement.NotePuchaseAgreement.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.notepurchaseagreement.NotePuchaseAgreement} returns this
 */
proto.notepurchaseagreement.NotePuchaseAgreement.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string FirstName = 2;
 * @return {string}
 */
proto.notepurchaseagreement.NotePuchaseAgreement.prototype.getFirstname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.notepurchaseagreement.NotePuchaseAgreement} returns this
 */
proto.notepurchaseagreement.NotePuchaseAgreement.prototype.setFirstname = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string LastName = 3;
 * @return {string}
 */
proto.notepurchaseagreement.NotePuchaseAgreement.prototype.getLastname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.notepurchaseagreement.NotePuchaseAgreement} returns this
 */
proto.notepurchaseagreement.NotePuchaseAgreement.prototype.setLastname = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string DateOfBirth = 4;
 * @return {string}
 */
proto.notepurchaseagreement.NotePuchaseAgreement.prototype.getDateofbirth = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.notepurchaseagreement.NotePuchaseAgreement} returns this
 */
proto.notepurchaseagreement.NotePuchaseAgreement.prototype.setDateofbirth = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string HomeAddress = 5;
 * @return {string}
 */
proto.notepurchaseagreement.NotePuchaseAgreement.prototype.getHomeaddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.notepurchaseagreement.NotePuchaseAgreement} returns this
 */
proto.notepurchaseagreement.NotePuchaseAgreement.prototype.setHomeaddress = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string EmailAddress = 6;
 * @return {string}
 */
proto.notepurchaseagreement.NotePuchaseAgreement.prototype.getEmailaddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.notepurchaseagreement.NotePuchaseAgreement} returns this
 */
proto.notepurchaseagreement.NotePuchaseAgreement.prototype.setEmailaddress = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string PhoneNumber = 7;
 * @return {string}
 */
proto.notepurchaseagreement.NotePuchaseAgreement.prototype.getPhonenumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.notepurchaseagreement.NotePuchaseAgreement} returns this
 */
proto.notepurchaseagreement.NotePuchaseAgreement.prototype.setPhonenumber = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string SocialSecurity = 8;
 * @return {string}
 */
proto.notepurchaseagreement.NotePuchaseAgreement.prototype.getSocialsecurity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.notepurchaseagreement.NotePuchaseAgreement} returns this
 */
proto.notepurchaseagreement.NotePuchaseAgreement.prototype.setSocialsecurity = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional uint64 FundsCommitted = 9;
 * @return {number}
 */
proto.notepurchaseagreement.NotePuchaseAgreement.prototype.getFundscommitted = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.notepurchaseagreement.NotePuchaseAgreement} returns this
 */
proto.notepurchaseagreement.NotePuchaseAgreement.prototype.setFundscommitted = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.notepurchaseagreement.GetNotePurchaseAgreementDocRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.notepurchaseagreement.GetNotePurchaseAgreementDocRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.notepurchaseagreement.GetNotePurchaseAgreementDocRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.notepurchaseagreement.GetNotePurchaseAgreementDocRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    payload: (f = msg.getPayload()) && proto.notepurchaseagreement.NotePuchaseAgreement.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.notepurchaseagreement.GetNotePurchaseAgreementDocRequest}
 */
proto.notepurchaseagreement.GetNotePurchaseAgreementDocRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.notepurchaseagreement.GetNotePurchaseAgreementDocRequest;
  return proto.notepurchaseagreement.GetNotePurchaseAgreementDocRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.notepurchaseagreement.GetNotePurchaseAgreementDocRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.notepurchaseagreement.GetNotePurchaseAgreementDocRequest}
 */
proto.notepurchaseagreement.GetNotePurchaseAgreementDocRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.notepurchaseagreement.NotePuchaseAgreement;
      reader.readMessage(value,proto.notepurchaseagreement.NotePuchaseAgreement.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.notepurchaseagreement.GetNotePurchaseAgreementDocRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.notepurchaseagreement.GetNotePurchaseAgreementDocRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.notepurchaseagreement.GetNotePurchaseAgreementDocRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.notepurchaseagreement.GetNotePurchaseAgreementDocRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPayload();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.notepurchaseagreement.NotePuchaseAgreement.serializeBinaryToWriter
    );
  }
};


/**
 * optional NotePuchaseAgreement payload = 1;
 * @return {?proto.notepurchaseagreement.NotePuchaseAgreement}
 */
proto.notepurchaseagreement.GetNotePurchaseAgreementDocRequest.prototype.getPayload = function() {
  return /** @type{?proto.notepurchaseagreement.NotePuchaseAgreement} */ (
    jspb.Message.getWrapperField(this, proto.notepurchaseagreement.NotePuchaseAgreement, 1));
};


/**
 * @param {?proto.notepurchaseagreement.NotePuchaseAgreement|undefined} value
 * @return {!proto.notepurchaseagreement.GetNotePurchaseAgreementDocRequest} returns this
*/
proto.notepurchaseagreement.GetNotePurchaseAgreementDocRequest.prototype.setPayload = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.notepurchaseagreement.GetNotePurchaseAgreementDocRequest} returns this
 */
proto.notepurchaseagreement.GetNotePurchaseAgreementDocRequest.prototype.clearPayload = function() {
  return this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.notepurchaseagreement.GetNotePurchaseAgreementDocRequest.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.notepurchaseagreement.GetNotePurchaseAgreementDocResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.notepurchaseagreement.GetNotePurchaseAgreementDocResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.notepurchaseagreement.GetNotePurchaseAgreementDocResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.notepurchaseagreement.GetNotePurchaseAgreementDocResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    filecontent: msg.getFilecontent_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.notepurchaseagreement.GetNotePurchaseAgreementDocResponse}
 */
proto.notepurchaseagreement.GetNotePurchaseAgreementDocResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.notepurchaseagreement.GetNotePurchaseAgreementDocResponse;
  return proto.notepurchaseagreement.GetNotePurchaseAgreementDocResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.notepurchaseagreement.GetNotePurchaseAgreementDocResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.notepurchaseagreement.GetNotePurchaseAgreementDocResponse}
 */
proto.notepurchaseagreement.GetNotePurchaseAgreementDocResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setFilecontent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.notepurchaseagreement.GetNotePurchaseAgreementDocResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.notepurchaseagreement.GetNotePurchaseAgreementDocResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.notepurchaseagreement.GetNotePurchaseAgreementDocResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.notepurchaseagreement.GetNotePurchaseAgreementDocResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFilecontent_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes fileContent = 1;
 * @return {!(string|Uint8Array)}
 */
proto.notepurchaseagreement.GetNotePurchaseAgreementDocResponse.prototype.getFilecontent = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes fileContent = 1;
 * This is a type-conversion wrapper around `getFilecontent()`
 * @return {string}
 */
proto.notepurchaseagreement.GetNotePurchaseAgreementDocResponse.prototype.getFilecontent_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getFilecontent()));
};


/**
 * optional bytes fileContent = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getFilecontent()`
 * @return {!Uint8Array}
 */
proto.notepurchaseagreement.GetNotePurchaseAgreementDocResponse.prototype.getFilecontent_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getFilecontent()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.notepurchaseagreement.GetNotePurchaseAgreementDocResponse} returns this
 */
proto.notepurchaseagreement.GetNotePurchaseAgreementDocResponse.prototype.setFilecontent = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


goog.object.extend(exports, proto.notepurchaseagreement);
